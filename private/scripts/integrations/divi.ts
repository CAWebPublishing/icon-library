export const iconImports: string[] = [];

export function outputIntegrationFile() {
  return [
    `// Autogenerated file, do not edit directly\n`, // comment
    `\n// WordPress Dependencies.\n`, // comment
    `\nimport { addAction, addFilter } from '@wordpress/hooks';\n`, // import statement
    `\n// Divi Dependencies.\n`, // comment
    `import { iconList } from '@divi/icon-library';\n\n`, // import statement
    `// Icons.\n`, // comment
    `import {\n`, // opening import statement
    `\t${iconImports.join(',\n\t')}`, // formatted icon imports
    `\n} from '../icons';\n\n`, // closing import statement
    `// This adds the CAWeb Icon to the Modules Library.\n`, // comment
    `const addCAWebModuleIcon = ( icons: object[] ) => {\n`, // function declaration 
    `\treturn {\n`, // opening return statement
    `\t\t...icons, // This is important. Without this, all other icons will be overwritten.\n`, // return statement
    `\t\t[caweb.name]: caweb\n`, // add CAWeb to module icon array
    `\t};\n`, // closing return statement
    `};\n\n`, // closing function declaration
    `// Add module icons to the icon library.\n`, // comment
    `addFilter( 'divi.iconLibrary.icon.map', 'caweb.addCAWebModuleIcon', addCAWebModuleIcon );\n\n`, // add filter to icon library
    `// the divi filters aren't all working yet, so this is a good place to add icons to the iconList\n`, // comment
    `addAction( \n`, // add action to icon list
    `\t'divi.visualBuilder.registerStores.after',\n`, // action name
    `\t'caweb.iconList',\n`, // action name
    `\t( arr: object[] ) => {\n`, // function declaration
    `\t\tlet cawebIconList = [\n`,
    `\t\t\t${iconImports.map(i => `${i}.data`).join(',\n\t\t\t')}`, // formatted icon array
    `\n\t\t];\n`, // initialize icon list
    `\n\t\ticonList.push( ...cawebIconList );\n`, // concatenate icon list
    `\n\t}\n`, // closing function declaration
    `);\n` // closing action
  ].join(' ');
}

